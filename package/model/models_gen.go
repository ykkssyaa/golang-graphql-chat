// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Chat struct {
	ID    string `json:"id"`
	User1 *User  `json:"user_1"`
	User2 *User  `json:"user_2"`
}

type Message struct {
	ID       string     `json:"id"`
	Payload  string     `json:"payload"`
	Sender   *User      `json:"sender"`
	Receiver *User      `json:"receiver"`
	Chat     *Chat      `json:"chat"`
	Time     *time.Time `json:"time,omitempty"`
}

type MessageEdge struct {
	Node   *Message `json:"node,omitempty"`
	Cursor string   `json:"cursor"`
}

type MessagesFromUserInput struct {
	Receiver string `json:"receiver"`
	Sender   string `json:"sender"`
}

type NewMessage struct {
	Payload  string     `json:"payload"`
	Sender   string     `json:"sender"`
	Receiver string     `json:"receiver"`
	Chat     string     `json:"chat"`
	Time     *time.Time `json:"time,omitempty"`
}

type NewUser struct {
	Name string `json:"name"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

type User struct {
	ID    string  `json:"id"`
	Name  string  `json:"name"`
	Chats []*Chat `json:"chats,omitempty"`
}
